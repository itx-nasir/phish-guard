version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      target: production
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://backend:5000
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      target: production
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-production-secret-key-change-me}
    depends_on:
      - redis
    restart: unless-stopped

  celery_worker:
    build:
      context: ./backend
      target: production
    command: celery -A app.celery worker --loglevel=info --concurrency=4
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLASK_ENV=production
    depends_on:
      - redis
      - backend
    restart: unless-stopped

  celery_beat:
    build:
      context: ./backend
      target: production
    command: celery -A app.celery beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLASK_ENV=production
    depends_on:
      - redis
      - backend
    restart: unless-stopped

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_ARGS=--save 20 1 --appendonly yes
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis_data:
    driver: local